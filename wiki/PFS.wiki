#labels FileSystem,FAT,32
=Documentación Proceso File System=

Resumen de estructuras y decisiones tomadas en el desarrollo del Proceso File System

==Introducción FAT==

El nombre del sistema de archivos *FAT* (_File Allocation Table_) proviene del uso de una tabla que centraliza la información sobre aquellas áreas de memoria que pertenecen a archivos y aquellas que se encuentran libres o posiblemente no utilizadas. La FAT también  alberga la información acerca de *donde* se encuentra cada archivo almacenado en memoria.

Con el objeto de limitar el tamaño de la tabla,la partición o el espacio en disco cedido a los archivos es administrado en forma de _clusters_ (pequeños bloques de espacio contiguo). Nosotros utilizaremos clústers de *4Kb*. El número de bits utilizado para identificar cada cluster es de 28 bits en FAT 32, a pesar de que el tamaño total de cada entrada en la tabla FAT es de 32 (se desperdician 4 bits por entrada).

Cada archivo puede ocupar uno o más clusters según su tamaño, es por eso que un archivo en la tabla FAT está representado como una cadena de estos clusters referida como una única lista enlazada.

La *tabla FAT* no es más que una lista de entradas que ubican a cada clúster en la partición. Cada entrada puede contener alguno de los siguientes 5 valores:

1) El número de clúster al siguiente clúster en la cadena.(un valor cualquiera desde 0x00000002 al 0xFFFFFFF6 ) 
2) *EOC* _end of clusterchain_ *marker*. Es un valor que indica el fin de la cadena.
3) Cluster reservado        (0x00000001)
4) Cluster no utilizado     (0x00000000)
5) Una marca que indica que el clúster se encuentra dañado   (0xFFFFFFF7)

Las 2 primeras entradas de tabla FAT almacenan valores especiales:

entrada 0 = Media Descriptor (obtenido del boot sector).
entrada 1 = EOC marker.

En la entrada 2 se encuentra el Root directory, y a partir de allí, datos.

==Estructuras de nuestra FAT32 (según este TP)==

===Las tres principales regiones de nuestra tabla FAT===

|| *Contenido* || Boot Sector | FS information sector | Otros sectores Reservados || Tabla FAT #1 || Data Region ||
|| *size in sectors* || (número de *sectores reservados*) || Nro. de FATs(1) x (sectores por FAT) || Nro. de Clusters x Sectores por Cluster ||

1) Los *Sectores Reservados*:
   El primero de estos es el *Boot Sector* (_Partition Boot Record_), localizado en el sector 0. Contiene información básica del file system, punteros a otras secciones, el BIOS parameter block y el código del OS Boot loader. El segundo sector reservado es el _File Information Sector_ en el sector 1 y un _Backup Boot Sector_ en el sector 6. A pesar de que solo éstos tres sectores se encuentran usados, los primeros 32 están reservados.

2) La *Región FAT*:
   En nuestro TP, solo utilizamos una tabla pero normalmente existen 2, para chequeo de redundancia. La tabla funciona como un mapa de la _Data Region_, en donde se indican aquellos clústers que están siendo usados por archivos y directorios.

3) La *Data Region*:
   Es aquí donde los datos de los archivos y los directorios (el root en FAT32 se encuentra aquí también) se encuentran almacenados y es por esto que esta región ocupa la gran parte de la partición.

   El tamaño de los archivos y de los subdirectorios puede ser incrementado arbitrariamente, siempre y cuando hayan clústers libres, simplemente al agregar más eslabones a la cadena del archivo en la FAT.

   El primer clúster de la _data region_ es el cluster 2, donde comienza la *Root Directory Table*.


==Donde está todo==

*PFS.C* : Proceso File System, con las implementaciones de las funciones de FUSE. Hasta el momento se encuentran funcionales:

fat32_getattr
fat32_readdir

*PFS.h* : Definiciones de los tipos de datos, labels y otros males



==Resumen de estructuras==

===Estructura tipo *boot_t*===

Es un array de 512 bytes simil al Boot Sector. Solamente contiene la información necesaria.

||*Nombre*||bytes per sector||sectors per cluster||Reserved Sector Count||# of FATs||Total Sectors||Sectors per FAT||
||*Longitud* (bytes)|| 2 || 1 || 2 || 1 || 4 || 4 ||
||*byte offset*|| 0x0B (11) || 0x0D (13) || 0x0E (14) || 0x10 (16) || 0x20 (32) || 0x24 (36) ||

===Estructura tipo *fsinfo_t*===

Es un array de 512 bytes simil al FS information sector. Solamente se utiliza un campo (_Number of free clusters on the drive_) de 4 bytes en la posición 0x1E8

==Decisiones Tomadas==




Add your content here.


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages



===Notas===

# Archivos de nombre largo : de 0 hasta 255 caracteres UTF-16

# FAT usa formato *Little Endian* para las entradas en el header (sectores reservados) y para las entradas de la FAT. La notación *Little Endian* implica que  
se guarda *primero* el byte menos significativo.